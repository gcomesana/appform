package org.cnio.appform.entity;

import java.util.Collection;
import java.util.List;
import java.util.ArrayList;

import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.SequenceGenerator;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;


@Entity
@Table(name="answer")
public class Answer {
	@Id
	@Column(name="idanswer")
	@SequenceGenerator(sequenceName="answer_idanswer_seq", name = "AnswerSeqGen")
	@GeneratedValue(generator="AnswerSeqGen", strategy = SEQUENCE)
	private Integer id;
	
	@Column(name="thevalue")
	private String value;
	@Column(name="answer_order")
	private Integer answerOrder;
	
/*	
	@ManyToOne
//	@JoinColumn(name="idenumtype")
	@JoinColumn(name="idquestion")
	private Question question;
*/
	
// M:1 relationship with answer item to know what is the type of an atomic
// answer to a question
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "codansitem", unique = false, nullable = false, insertable = true, updatable = true)
	private AnswerItem answerItem;
	
	
/* Relation ship N:1 withe the IntrvInstance, with every interview to patients
	@ManyToOne
	@JoinColumn(name="codintr_ins")
	private IntrvInstance intrvInstance;
*/
	
//Involving this answer in the ternary relatinoship with patient and question	
	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "answer")
	private List<PatGivesAns2Ques> patAnsQues;
	
	
	public Answer () {
		patAnsQues = new ArrayList<PatGivesAns2Ques>();
	}
	
	
	public Answer (String value) {
		this ();
		this.value = value;
	}
	
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}


	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

/*	
	public Question getQuestion() {
		return question;
	}

	public void setParentType(Question question) {
		this.question = question;
		
		question.getAnswers().add(this);
	}
*/	
	
/*
	public IntrvInstance getIntrvInstance() {
		return intrvInstance;
	}

	public void setIntrvInstance(IntrvInstance intrInst) {
		this.intrvInstance = intrInst;
		intrvInstance.getAnswers().add(this);
//		question.getAnswers().add(this);
		
	}
*/
	public Integer getAnswerOrder() {
  	return answerOrder;
  }

	public void setAnswerOrder(Integer listOrder) {
  	this.answerOrder = listOrder;
  }
	
	public AnswerItem getAnswerItem() {
  	return answerItem;
  }


	public void setAnswerItem(AnswerItem answerItem) {
  	this.answerItem = answerItem;
  	
  	answerItem.getAnswers().add(this);
  }


	public List<PatGivesAns2Ques> getPatAnsQues() {
		return patAnsQues;
	}


	public void setPatAnsQues(List<PatGivesAns2Ques> patAnsQues) {
		this.patAnsQues = patAnsQues;
	}
}