/**
 * @author Darron Schall
 * @version 1.0
 * 
 * Aug. 22, 2003
 * 
 * PasswordGenerator Test program
 * 
 * Revision History:
 * Rev Date			Who		Description
 * 1.0 8/22/03		darron	Initial Draft
 * --------------------------------------
 * License For Use
 * --------------------------------------
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * 
 * 3. The name of the author may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
 * OF SUCH DAMAGE.
 */
package org.cnio.appform.util;

public class PasswordGeneratorTest {

	public static void main(String[] args) {
		PasswordGenerator passGen = new PasswordGenerator();
		System.out.println(passGen.getPassword());
				
		for (int i = 0; i < 30; i++) {
			passGen.generatePassword();
			System.out.println("1. "+passGen.getPassword());
		}
		
		try {
			passGen.setTemplate("aaaAAAnnnooo");
			passGen.generatePassword();
			System.out.println("2. "+passGen.getPassword());	
		}
		catch (java.text.ParseException pe) {
			System.err.println("Error at postition " + pe.getErrorOffset() + " - " + pe.getMessage());
		}
		
		try {
			passGen.clearTemplate();
			passGen.setNumbersIncluded(false);
			passGen.setLength(30);
			passGen.generatePassword();
			System.out.println("3. "+passGen.getPassword());
		}
		catch (java.util.prefs.InvalidPreferencesFormatException ipfe) {
			System.err.println("Error setting password flags - " + ipfe.getMessage());	
		}
	
	}
}
