<!DOCTYPE hibernate-configuration SYSTEM "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
  <session-factory>
    <!-- Don't forget to copy your JDBC driver to the lib/ directory! -->

    <!-- Settings for a local PostgreSQL database. -->
    <property name="dialect">org.hibernate.dialect.PostgreSQLDialect</property>
    <property name="query.substitutions">yes 'Y', no 'N'</property>
    <property name="connection.driver_class">org.postgresql.Driver</property>
 	  <property name="connection.url">
 			jdbc:postgresql://padme.cnio.es:5432/appform 
		</property> 
		
    <property name="connection.username">gcomesana</property>
 		<property name="connection.password">appform</property> 

    <!-- Use the C3P0 connection pool provider -->
    <property name="hibernate.c3p0.min_size">5</property>
    <property name="hibernate.c3p0.max_size">20</property>
    <property name="hibernate.c3p0.timeout">300</property>
    <property name="hibernate.c3p0.max_statements">50</property>
    <property name="hibernate.c3p0.idle_test_period">3000</property>

    <!-- Use the Hibernate built-in pool for tests. -->
    <property name="connection.pool_size">3</property>

    <!-- Enable auto-commit mode for special cases (integration testing) -->
    <property name="connection.autocommit">true</property>

    <!-- Disable the second-level cache  -->
    <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>
    <property name="cache.use_query_cache">false</property>
    <property name="cache.use_minimal_puts">false</property>

    <!-- In eager fetching, only join three tables deep if joins are used -->
    <property name="max_fetch_depth">3</property>

    <!-- Print SQL to stdout, format it nicely  -->
    <property name="show_sql">false</property>
    <property name="format_sql">true</property>
    <property name="use_sql_comments">true</property>

    <!-- Drop and then re-create schema on SessionFactory build, for testing  -->
    <property name="hibernate.hbm2ddl.auto">update</property>

    <!-- Use thread-bound persistence context propagation, scoped to the transaction -->
    <property name="current_session_context_class">thread</property>

    <!-- misc properties -
    <property name="hibernate.cglib.use_reflection_optimizer">false</property> -->
		<property name="hibernate.bytecode.use_reflection_optimizer">false</property>
    <!-- Application mapping classes/tables -->

    <!-- CaveatEmptor annotated EJB3 entity beans.

        Use this with the CaveatEmptor.JPA package if you don't want
        persistence.xml but hibernate.cfg.xml. Startup with the SessionFactory
        instead of the Persistence/EntityManagerFactory bootstrap.

    <mapping package="auction.persistence"/>
    <mapping class="auction.persistence.audit.AuditLogRecord"/>
    <mapping class="auction.model.User"/>
    <mapping class="auction.model.Item"/>
    <mapping class="auction.model.Category"/>
    <mapping class="auction.model.CategorizedItem"/>
    <mapping class="auction.model.Bid"/>
    <mapping class="auction.model.BillingDetails"/>
    <mapping class="auction.model.CreditCard"/>
    <mapping class="auction.model.BankAccount"/>
    <mapping class="auction.model.Comment"/>
    <mapping class="auction.model.AddressEntity"/>
    <mapping class="auction.model.Shipment"/>
    <mapping resource="auction/model/DynamicModel.hbm.xml"/>
    -
    
    <mapping class="org.cnio.pangenes.bean.Patient"/>
    <mapping class="org.cnio.pangenes.bean.Phone"/>
    -->
  </session-factory>

</hibernate-configuration>
