
<%-- <?xml version="1.0" encoding="UTF-8" ?> --%>
<%@ page language="java" contentType="text/html;charset=UTF-8"%>

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>

<%@page import="org.hibernate.Session, org.hibernate.HibernateException,
								org.hibernate.Transaction, java.util.Collection, 
								java.util.Iterator, java.util.ArrayList, 
								java.util.Enumeration, java.util.List"  %>
								
<%@page import="org.cnio.appform.entity.*, org.cnio.appform.util.LogFile,
								org.cnio.appform.util.HibernateUtil,
								org.cnio.appform.util.HibController,
								org.cnio.appform.util.AppUserCtrl" %>
								
 
<%
//  Enumeration<String> params = request.getParameterNames();
 
	String user = request.getUserPrincipal().getName();
	String ipAddr = request.getRemoteAddr();
	String sessId = request.getSession().getId();

	Session hibSes = HibernateUtil.getSessionFactory().openSession();
	
	AppUserCtrl userCtrl = new AppUserCtrl (hibSes);
	AppUser appUsr = userCtrl.getUser(user);
	
	if (appUsr.wasRemoved()) {
		response.sendRedirect("../logout.jsp");
		return;
	}
	
	// This piece of code avoids one user logs in concurrently from different ips
	if (appUsr.getLoggedIn() == 1 && !ipAddr.equalsIgnoreCase(appUsr.getLoggedFrom())) {
		LogFile.info ("user ALREADY logged: '"+appUsr.getUsername()+
				"' from "+ipAddr+" (vs "+appUsr.getLoggedFrom()+") with "+
				session.getId()+" and redirecting...");
		
		userCtrl.logSessionInit(appUsr.getId(), user, "", "", ipAddr,
				AppUserCtrl.LOGIN_CONCURRENT);
		session.invalidate();
		response.sendRedirect("../nologged.jsp");
		return;
	}
	
	
//Primary groups stuff ///////////////////////////////////////////////////
	Integer usrId = appUsr.getId();	
	AppGroup active1ary = userCtrl.getPrimaryActiveGroup(appUsr);
	
	if (active1ary == null) {
		List<AppGroup> mainGrps = userCtrl.getPrimaryGroups(appUsr);
		int numGroups = (mainGrps == null)? 0: mainGrps.size();
		
		pageContext.setAttribute("numGroups", numGroups);
		String grpsId = "";
		
		if (numGroups == 1) {
			String[] grpStr = grpsId.split(":");
			session.setAttribute("primaryGrpId", grpStr[1]);
			session.setAttribute("primaryGrpName", grpStr[0]);
			
			userCtrl.setActiveGroup(appUsr, mainGrps.get(0), 1);
		}
		else {
			for (Iterator<AppGroup> itGrp = mainGrps.iterator(); itGrp.hasNext();) {
				AppGroup grp = itGrp.next();
				grpsId += grp.getName()+":" + grp.getId().toString()+",";
			}
			grpsId = grpsId.substring(0, grpsId.length()-1);
			pageContext.setAttribute("grpsId", grpsId);
		}
	}


// This is to log user session both to log file and database and 
// set session vars like username, userid, rolenames and groupnames
// This should be executed only when the user logs in
	if (session.getAttribute("logged") == null) {
		session.setAttribute ("user", user);
		session.setAttribute ("usrid", appUsr.getId());
		
		List<Role> roles = userCtrl.getRoleFromUser(appUsr);
		int numRoles = roles.size();
		String strRoles = "";
		for (Role r: roles) {
			strRoles += r.getName()+",";
		}
		if (strRoles.length() > 0)
			strRoles = strRoles.substring(0, strRoles.length()-1);
		else {
			response.sendRedirect("../logout.jsp");
			return;
		}
		session.setAttribute ("roles", strRoles);
		


		Transaction tx = null;
		try {
			tx = hibSes.beginTransaction();
			session.setAttribute("logged", 1);
			appUsr.setLoggedIn(1);
			appUsr.setLoggedFrom(ipAddr);
			tx.commit();

		}
		catch (HibernateException ex) {
			if (tx != null)
				tx.rollback();
			
			session.removeAttribute("logged");
			LogFile.error("Unable to log to database user login");
			StackTraceElement[] stack = ex.getStackTrace();
			LogFile.logStackTrace(stack);
		}
	
		
// This conditional, which seems to redundant, is here as the previous snippet
// can fail by raising an exception during database update
		if (session.getAttribute("logged") != null && appUsr.getLoggedIn() == 1) {
			userCtrl.logSessionInit(appUsr.getId(), user, strRoles, 
															sessId, ipAddr, AppUserCtrl.LOGIN_SUCCESS);
LogFile.info("User '"+user+"' logged in with role(s) '"+strRoles+"'");
		}
	
	}
	else
		LogFile.info("user '"+appUsr.getUsername()+"' already logged for "+sessId
								+" or "+session.getId());
//////////// end of user session logging //////////////////////////////////////

	

/*	
	Integer codHosp = userCtrl.getCodHospital(user);
	session.setAttribute ("hospital", codHosp);

	if (strRoles.equalsIgnoreCase("interviewer")) {
		response.sendRedirect ("intrv/index.jsp");
	}
*/
//	hibSes.close();

%>

<%-- to implement  --%>
<c:if test="${numGroups eq 0}">
	<jsp:forward page="noprofile.jsp" />
</c:if>

<c:if test="${numGroups gt 1}"> 
	<jsp:forward page="setprimarygrp.jsp">
		<jsp:param name="typegroup" value="PRI" />
		<jsp:param name="groups" value="${grpsId}" />
	</jsp:forward>
</c:if>


<c:set var="t" value="${param.t}"/>
<c:if test="${empty t}">
	<c:set var="t" value="prj"/>
</c:if>

<c:choose>
	<c:when test="${t eq 'prj'}">
		<c:set var="typename" value="project"/>
	</c:when>
	<c:when test="${t eq 'int'}">
		<c:set var="typename" value="interview"/>
	</c:when>
	<c:when test="${t eq 'sec'}">
		<c:set var="typename" value="section"/>
	</c:when>
	<c:when test="${t eq 'ele'}">
		<c:set var="typename" value="element"/>
	</c:when>
	<c:when test="${t eq 'txt'}">
		<c:set var="typename" value="text"/>
	</c:when>
	<c:when test="${t eq 'que'}">
		<c:set var="typename" value="question"/>
	</c:when>
	<c:when test="${t eq 'enu'}">
		<c:set var="typename" value="enum type"/>
	</c:when>
	
</c:choose>
	
	
	
<%-- HEADER.JSP initialization --%>
<%
	if (request.getParameter("res") != null) {
		pageContext.setAttribute ("res", request.getParameter("res"));
%>
	<jsp:include page="inc/header.jsp">
		<jsp:param name="itemname" value="${typename}"/>
		<jsp:param name="option" value="res not null"/>
	</jsp:include>
<%
	}

	else if (request.getParameter("op") != null) {
		pageContext.setAttribute ("op", request.getParameter("op"));
%>
	<jsp:include page="inc/header.jsp">
		<jsp:param name="itemname" value="${typename}"/>
		<jsp:param name="option" value="op not null"/>
	</jsp:include>
<%
	}
	else {
%>
	<jsp:include page="inc/header.jsp">
		<jsp:param name="itemname" value="${typename}"/>
		<jsp:param name="option" value="rest"/>
	</jsp:include>
<%
	}
%>

		
<%-- ------------------------------------------------------------- --%>	
<%-- HERE STARTS THE CENTRAL PART, BOTH THE MENU AND CONTENT AREAS --%>				 
        <div id="content-container">
        
<!-- **************** START CONTENT (CENTER) AREA (REGION B)**************** -->

<%
	if (request.getParameter("res") != null) {
		pageContext.setAttribute ("res", request.getParameter("res"));
%>
	<jsp:include page="inc/center.jsp">
		<jsp:param name="itemname" value="${typename}"/>
		<jsp:param name="t" value="${t}"/>
	</jsp:include>
<%
	}

	else if (request.getParameter("op") != null) {
		pageContext.setAttribute ("op", request.getParameter("op"));
%>
	<jsp:include page="inc/center.jsp">
		<jsp:param name="itemname" value="${typename}"/>
		<jsp:param name="t" value="${t}"/>
	</jsp:include>
<%
	}
	else {
%>
	<jsp:include page="inc/center.jsp">
		<jsp:param name="itemname" value="${typename}"/>
		<jsp:param name="t" value="${t}"/>
	</jsp:include>
<%
	}
%>


<%-- ****************** START MENU (LEFT) AREA (REGION A) ***************** --%>
<%@include file="inc/left.jsp" %>
<%-- JBOSS pieces
            < p:region regionName='left' regionID='regionA'/ >
            < p:region regionName='center' regionID='regionB'/ >
            <hr class="cleaner"/> 
--%>
            
        </div> <%-- content-container --%>
        
<%@include file="inc/footer.jsp" %>
